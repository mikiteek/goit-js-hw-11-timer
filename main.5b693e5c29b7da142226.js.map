{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["refs","days","document","querySelector","hours","minutes","seconds","constructor","targetDate","Date","this","_selector","_targetDate","value","onTimer","updateClockface","now","setInterval","time","pad","Math","floor","textContent","String","padStart"],"mappings":"2FAAA,4B,mBCAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,QAASH,SAASC,cAAc,2BAChCG,QAASJ,SAASC,cAAc,4BA2CtB,IAxCZ,MACEI,YAAYC,EAAa,IAAIC,KAAK,iBAChCC,KAAKC,UAAY,WACjBD,KAAKE,YAAcJ,EAErB,eACE,OAAOE,KAAKC,UAEd,aAAaE,GACXH,KAAKC,UAAYE,EAGnB,iBACE,OAAOH,KAAKE,YAEd,eAAeC,GACbH,KAAKE,YAAcC,EAGrBC,UACEJ,KAAKK,gBAAgBL,KAAKF,WAAaC,KAAKO,OAC5CC,YAAY,KACVP,KAAKK,gBAAgBL,KAAKF,WAAaC,KAAKO,QAC3C,KAELD,gBAAgBG,GACd,MAAMjB,EAAOS,KAAKS,IAAIC,KAAKC,MAAMH,EAAO,QAClCd,EAAQM,KAAKS,IAAIC,KAAKC,MAAOH,EAAO,MAAR,OAC5Bb,EAAUK,KAAKS,IAAIC,KAAKC,MAAOH,EAAO,KAAR,MAC9BZ,EAAUI,KAAKS,IAAIC,KAAKC,MAAOH,EAAO,IAAe,MAC3DlB,EAAKC,KAAKqB,YAAcrB,EACxBD,EAAKI,MAAMkB,YAAclB,EACzBJ,EAAKK,QAAQiB,YAAcjB,EAC3BL,EAAKM,QAAQgB,YAAchB,EAE7Ba,IAAIN,GACF,OAAOU,OAAOV,GAAOW,SAAS,EAAG,OAIN,IAAIf,KAAK,iBAClCK,W","file":"main.5b693e5c29b7da142226.js","sourcesContent":["import \"./js/timer\";\nimport './sass/styles.scss';\n","const refs = {\n  days: document.querySelector(\"span[data-value='days']\"),\n  hours: document.querySelector(\"span[data-value='hours']\"),\n  minutes: document.querySelector(\"span[data-value='mins']\"),\n  seconds: document.querySelector(\"span[data-value='secs']\"),\n}\n\nclass CountdownTimer {\n  constructor(targetDate = new Date(\"Sep 17, 2021\")) {\n    this._selector = \"#timer-1\";\n    this._targetDate = targetDate;\n  }\n  get selector() {\n    return this._selector;\n  }\n  set selector(value) { // можно проверок всяких добавить на корректность значения\n    this._selector = value;\n  }\n\n  get targetDate() {\n    return this._targetDate;\n  }\n  set targetDate(value) { // можно проверок всяких добавить на корректность значения\n    this._targetDate = value;\n  }\n\n  onTimer() {\n    this.updateClockface(this.targetDate - Date.now());\n    setInterval(() => {\n      this.updateClockface(this.targetDate - Date.now());\n    }, 1000);\n  }\n  updateClockface(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const minutes = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    refs.days.textContent = days;\n    refs.hours.textContent = hours;\n    refs.minutes.textContent = minutes;\n    refs.seconds.textContent = seconds;\n  }\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nlet timer = new CountdownTimer(new Date(\"Aug 30, 2020\"));\ntimer.onTimer();"],"sourceRoot":""}